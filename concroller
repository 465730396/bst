##导入宏定义
$!define
$!init
##设置表后缀（宏定义）
#setTableSuffix("Controller")

##保存文件（宏定义）
#save("/controller", "Controller.java")

##包路径（宏定义）
#setPackageSuffix("controller")

##定义服务名
#set($serviceName = $!tool.append($!tool.firstLowerCase($!tableInfo.name), "Service"))

##定义实体对象名
#set($tableName = $!tableInfo.name)
#set($tableComment = $!tableInfo.comment)
#set($tableVariableName = $!tool.firstLowerCase($!tableInfo.name))
#set($tableFormName = $!tool.append($!tableInfo.name, "Form"))
#set($tableFormVariableName = $!tool.append($!tool.firstLowerCase($!tableInfo.name), "Form"))
#set($tableQueryFormName = $!tool.append($!tableInfo.name, "QueryForm"))
#set($tableQueryFormVariableName = $!tool.append($!tool.firstLowerCase($!tableInfo.name), "QueryForm"))
#set($tableQueryParamName = $!tool.append($!tableInfo.name, "QueryParam"))
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.mobikok.scrm.common.core.entity.vo.CommonResponse;
import $!{tableInfo.savePackageName}.entity.form.$!{tableFormName};
import $!{tableInfo.savePackageName}.entity.form.$!{tableQueryFormName};
import $!{tableInfo.savePackageName}.entity.param.$!{tableQueryParamName};
import $!{tableInfo.savePackageName}.entity.po.$!{tableName};
import $!{tableInfo.savePackageName}.entity.vo.$!{tableInfo.name}Vo;
import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;
import javax.validation.Valid;

##表注释（宏定义）
#tableComment("表控制层")
@Api(tags = "$!{tableComment}管理")
@RestController
@RequestMapping("$!tableVariableName")
public class $!{tableName}Controller {

    @Resource
    private $!{tableName}Service $!{serviceName};

    @ApiOperation(value = "新增$!tableComment", notes = "新增一个$!tableComment")
    @PostMapping
    public CommonResponse<Integer> add(@Valid @RequestBody $!tableFormName $!tableFormVariableName) {
        $!tableName $!tableVariableName = $!{tableFormVariableName}.toPo($!{tableName}.class);
        return CommonResponse.createBySuccess($!{serviceName}.add($!tableVariableName));
    }

    @ApiOperation(value = "删除$!tableComment", notes = "删除指定$!{tableComment}信息")
    @ApiImplicitParam(paramType = "path", name = "id", value = "$!{tableComment}ID", required = true)
    @DeleteMapping(value = "/{id}")
    public CommonResponse<Boolean> delete(@PathVariable Integer id) {
        return CommonResponse.createBySuccess($!{serviceName}.delete(id));
    }

    @ApiOperation(value = "修改$!tableComment", notes = "修改指定$!{tableComment}信息")
    @ApiImplicitParam(paramType = "path", name = "id", value = "$!{tableComment}ID", required = true)
    @PutMapping(value = "/{id}")
    public CommonResponse<Boolean> update(@PathVariable Integer id, @Valid @RequestBody $!tableFormName $!tableFormVariableName) {
        $!tableName $!tableVariableName = $!{tableFormVariableName}.toPo($!{tableName}.class);
        $!{tableVariableName}.setId(id);
        return CommonResponse.createBySuccess($!{serviceName}.update($!tableVariableName));
    }

    @ApiOperation(value = "获取$!tableComment", notes = "获取指定$!{tableComment}信息")
    @ApiImplicitParam(paramType = "path", name = "id", value = "$!{tableComment}ID", required = true)
    @GetMapping(value = "/{id}")
    public CommonResponse<$!{tableInfo.name}Vo> get(@PathVariable Integer id) {
        return CommonResponse.createBySuccess($!{serviceName}.get(id));
    }

    @ApiOperation(value = "搜索$!tableComment", notes = "根据条件查询$!{tableComment}信息列表")
    @GetMapping(value = "$!{tableVariableName}s")
    public CommonResponse<IPage<$!{tableInfo.name}Vo>> search(@Valid $!tableQueryFormName $!tableQueryFormVariableName) {
        return CommonResponse.createBySuccess($!{serviceName}.query($!{tableQueryFormVariableName}.generatePage(), $!{tableQueryFormVariableName}.toParam($!{tableQueryParamName}.class)));
    }
}
